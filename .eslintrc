{
  "extends": "airbnb",
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaVersion": 6,
    "ecmaFeatures": {
      "jsx": true
    },
    "sourceType": "module"
  },
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "plugins": [
    "react",
    "jsx-a11y"
  ],
  "rules": {
    "array-callback-return": "off",
    "arrow-parens": "off",
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "block-spacing": "off",
    "brace-style": "off",
    "camelcase": "off",
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "class-methods-use-this": "off",
    "global-require": "off",
    "guard-for-in": "off",
    "import/imports-first": "off",
    "import/newline-after-import": "off",
    "import/no-extraneous-dependencies": "off",
    "import/no-named-as-default": "off",

    // Doesn't work properly in Sublime Text
    // "import/no-unresolved": "error",
    "import/no-unresolved": "off",
    "import/extensions": "off",

    "import/prefer-default-export": "off",
    "indent": ["error", 2, {"SwitchCase": 1}],
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/heading-has-content": "off",
    "jsx-a11y/href-no-hash": "error",
    // "jsx-a11y/label-has-for": "error",
    "jsx-a11y/label-has-for": "off",
    "jsx-a11y/mouse-events-have-key-events": "error",
    "jsx-a11y/role-has-required-aria-props": "error",
    "jsx-a11y/role-supports-aria-props": "error",
    "jsx-a11y/no-static-element-interactions": "off",
    "max-len": "off",
    "newline-per-chained-call": "off",
    "no-confusing-arrow": "off",
    "no-console": "off",
    "no-multi-spaces": ["error", {"exceptions": {
      "VariableDeclarator": true,
      "ConditionalExpression": true,
      "FunctionExpression": true,
      "CallExpression": true,
      "ObjectExpression": true,
      "AssignmentExpression": true
    }}],
    "key-spacing": ["error", {"mode": "minimum"}],
    "no-nested-ternary": "off",
    "no-param-reassign": "off",
    "no-restricted-globals": ["error",
      // window (browser)
      "alert", "blur", "confirm", "event", "fetch", "find", "focus", "history",
      "length", "location", "name", "navigator", "open", "parent", "print",
      "prompt", "scroll", "self", "status", "stop", "top",
      // global (node)
      "root",
      // other
      "test",
      // These global functions are broken
      "isNaN", "isFinite"
    ],
    "no-restricted-syntax": "off",
    "no-underscore-dangle": "off",
    "no-unused-vars": ["error", {"argsIgnorePattern": "^_.", "varsIgnorePattern": "^_."}],
    "no-use-before-define": "off",
    // "no-useless-return": "off",
    "no-void": "off",

    // This should be used to denote the code that needs to be double-checked
    // before or after a push. The linter helps to spot these messages.
    "no-warning-comments": ["error", {"terms": ["FIXME", "REVIEW"]}],

    "object-curly-spacing": "off",
    "quotes": ["error", "single", {"avoidEscape": true, "allowTemplateLiterals": true}],
    "prefer-arrow-callback": ["error", {"allowNamedFunctions": true}],
    "prefer-rest-params": "off",
    "prefer-template": "error",
    "semi": "off",
    "space-before-function-paren": "off",
    "strict": "off",
    "jsx-quotes": "off",
    "react/forbid-prop-types": "off",
    "react/jsx-closing-bracket-location": "off",
    "react/jsx-first-prop-new-line": ["error", "multiline"],
    "react/jsx-filename-extension": "off",
    "react/jsx-indent": "off",
    "react/jsx-no-bind": "off",
    "react/jsx-no-target-blank": "off",
    // "react/no-string-refs": "off",
    "react/prefer-stateless-function": "off",
    "react/prop-types": "off",
    "react/require-extension": "off",
    "react/self-closing-comp": "off",
    "require-yield": "off"
  },
  "globals": {
    "_": true,
    "React": true
  }
}
